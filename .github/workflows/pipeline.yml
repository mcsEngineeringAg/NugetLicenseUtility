#name: ${{ env.major }}.${{ env.minor }}.${{ env.patch }}
on:
  push:
    branches:
    - main
    - release/*

vars:
  isMasterOrReleaseBranch: $[or(eq(github.ref, 'refs/heads/main'), startsWith(github.ref, 'refs/heads/release'))]

env:
  agentImageLinux: ubuntu-latest
  #isMasterOrReleaseBranch: $[or(eq(github.ref, 'refs/heads/main'), startsWith(github.ref, 'refs/heads/release'))]
  major: 1
  minor: 0
  patch: $[counter(format('{0}.{1}',$major,$minor), 1)]
  #patch: $[counter(format('{0}.{1}',variables['major'],variables['minor']), 1)]


jobs:
  BuildAndTest:
    name: Build and Test NugetUtility
    if: ${{ vars.isMasterOrReleaseBranch == true }}
    runs-on: $agentImageLinux
    steps:
    - uses: actions/checkout@v2
    - name: Restore
      run: dotnet restore src/LicenseUtility/**/*.csproj
    - name: Build from source
      run: dotnet build src/LicenseUtility/**/*.csproj -c Release --no-restore -p:Version=${{ env.major }}.${{ env.minor }}.${{ env.patch }}
    - name: Test
      run: dotnet test **/*Tests.csproj -c Release --no-build --collect:"XPlat Code Coverage"
    #- name: NuGet push
    #  run: nuget push
    #  if: (success() && ($isMasterOrReleaseBranch == true))
                    